name: Deploy

on:
  push:
    tags:
      - "@**"

jobs:
  deploy:
    name: Build and deploy
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: "12"
          registry-url: "https://registry.npmjs.org"

      - name: Get the tag
        id: get_tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF/refs\/tags\/\@/}

      - name: Get package and version
        id: get_package_version
        run: |
          echo ::set-output name=PACKAGE::@${TAG/\@*/}
          echo ::set-output name=VERSION::${TAG/*\@/}
        env:
          TAG: ${{ steps.get_tag.outputs.tag }}

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: chrnorm/deployment-action@v1.2.0
        name: Create GitHub deployment
        id: deployment
        with:
          environment: npm@latest
          token: "${{ github.token }}"

      - name: Install dependencies
        run: npm install

      - name: Check npm login
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Deploying packages
        run: npm run deploy -- --no-verify-access
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v1.0.0
        with:
          token: "${{ github.token }}"
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Notify releases to Slack
        if: success()
        uses: hbfernandes/slack-action@1.0
        with:
          args: |
            {
              "channel": "C01F1D3QAKV",
              "text": "Package ${{ steps.get_package_version.outputs.PACKAGE }} published to npm.",
              "attachments": [
                {
                  "title": "${{ steps.get_package_version.outputs.PACKAGE }} (${{ steps.get_package_version.outputs.VERSION }})",
                  "title_link": "https://www.npmjs.com/package/${{ steps.get_package_version.outputs.PACKAGE }}",
                  "text": "https://www.npmjs.com/package/${{ steps.get_package_version.outputs.PACKAGE }}",
                  "color": "good",
                  "fallback": "${{ steps.get_package_version.outputs.PACKAGE }} (${{ steps.get_package_version.outputs.VERSION }})"
                }
              ]
            }
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_RELEASE_BOT_OATH_TOKEN }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v1.0.0
        with:
          token: "${{ github.token }}"
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
