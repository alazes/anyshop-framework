name: Build

on: [push, pull_request]

jobs:
  pre-build:
    runs-on: ubuntu-20.04

    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      npm_cache_dir: ${{ steps.npm-cache.outputs.dir }}

    steps:
      - name: Check Duplicate Actions
        id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.3.0

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.2
        with:
          node-version: "12"

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

  build:
    runs-on: ubuntu-20.04

    needs: pre-build
    if: ${{ needs.pre-build.outputs.should_skip != 'true' }}
    name: Build

    steps:
      - uses: actions/checkout@v2

      # Cache for multiple run on different tags/branches for the same commit
      - name: Distribution Cache
        uses: actions/cache@v2
        id: dist-cache
        with:
          path: build
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Setup Node.js environment
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        uses: actions/setup-node@v2.1.2
        with:
          node-version: "12"

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=npm_cache_dir::$(npm config get cache)"

      - uses: actions/cache@v2
        name: Setup npm cache
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        with:
          path: ${{ steps.npm-cache.outputs.npm_cache_dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        run: npm install

      # - name: Linting Typescript code
      #   run: npm run lint:typescript

      - name: Bootstrapping packages
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        run: npm run bootstrap

      - name: Linting @anyshop/core
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        run: npx ng lint @anyshop/core

      - name: Building @anyshop/core
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        run: npx ng build @anyshop/core --prod

      - name: Linting @anyshop/shared
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        run: npx ng lint @anyshop/shared

      - name: Building @anyshop/shared
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        run: npx ng build @anyshop/shared --prod

      - name: Linting @anyshop/auth
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        run: npx ng lint @anyshop/auth

      - name: Building @anyshop/auth
        if: ${{ steps.dist-cache.outputs.cache-hit != 'true' }}
        run: npx ng build @anyshop/auth --prod
        
        
  test:
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
      - uses: actions/checkout@v2

      - name: Distribution Cache
        uses: actions/cache@v2
        id: dist-cache
        with:
          path: build
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-
            
      - run: tree -d dist
